/*package fr.herozofzespring.adapter.rest;

import fr.herozofzespring.adapter.persistence.HeroRepositoryImplementation;
import fr.herozofzespring.domain.model.Hero;
import fr.herozofzespring.port.HeroRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping("/api/v1/hero")
public class HeroController {

    @Autowired
    private final HeroRepository heroRepository;

    @GetMapping
    public ResponseEntity<Iterable<Hero>> getHeros() {
        return new ResponseEntity<>(heroRepository.findAll(), HttpStatus.OK);
    }

    @GetMapping("/{heroId}")
    public ResponseEntity<Hero> getHeroById(@PathVariable Integer heroId) {
        return new ResponseEntity<>(heroRepository.findById(heroId).get(), HttpStatus.OK);
    }

    @PostMapping
    public ResponseEntity<Hero> addHero(@RequestBody Hero hero) {
        if(hero.getId() == null)
            return new ResponseEntity<>(hero, HttpStatus.BAD_REQUEST);
        return new ResponseEntity<>(heroRepository.save(hero), HttpStatus.CREATED);
    }

    @DeleteMapping("/{heroId}")
    public ResponseEntity<String> removeProduct(@PathVariable Integer heroId) {
        heroRepository.deleteById(heroId);
        return new ResponseEntity<>("done", HttpStatus.OK);
    }
}
*/


package fr.herozofzespring.adapter.rest;
import fr.herozofzespring.domain.model.Hero;
import fr.herozofzespring.port.HeroRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@RestController // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class HeroController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private HeroRepository userRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam Hero hero
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request


        userRepository.save(hero);
        return "Saved";
    }


}